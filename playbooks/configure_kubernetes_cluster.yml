---

- name: Get info from master
  hosts: kubernetes_master
  tasks:
    - name: Get node key
      become: true
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_key

    - set_fact:
        node_key: "{{ node_key.content | b64decode | replace('\n', '') }}"

    - name: Get nodes status
      become: true
      ansible.builtin.command: kubectl get nodes --no-headers=true
      register: _node_statuses

    - set_fact:
        _node_statuses: "{{ _node_statuses.stdout_lines }}"

    - set_fact:
        node_status: "{{node_status|default({}) | combine({ item|regex_search('^(\\w+)') : item|regex_search('(\\w*Ready)')}) }}"
      loop: "{{ _node_statuses }}"
          

- name: Configure raspberry pis
  hosts: raspberry_pi
  become: true
  tasks:
    - name: Enable cgroup
      shell: "grep -q 'cgroup_memory=1 cgroup_enable=memory' /boot/cmdline.txt"
      register: grep_result
      ignore_errors: yes

    - block:
        - ansible.builtin.slurp:
            src: /boot/cmdline.txt
          register: cmdline_file

        - set_fact:
            cmdline_file: "{{ cmdline_file['content'] | b64decode | replace('\n', '')}} cgroup_memory=1 cgroup_enable=memory"
        
        - ansible.builtin.file:
            path: /boot/cmdline.txt
            state: absent

        - ansible.builtin.file:
            path: /boot/cmdline.txt
            state: touch

        - ansible.builtin.lineinfile:
            line: "{{ cmdline_file }}"
            path: /boot/cmdline.txt
      when: grep_result.rc == 1

- name: Configure nodes
  hosts: kubernetes_agents
  become: true
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - network-manager
          - nfs-common
          - vlan
      
    - include_role:
        name: common/setup_vlan
      loop: "{{ vlan_ids }}"

    - name: Register agent
      block:
      - name: Remove the agent
        shell: "/usr/local/bin/k3s-agent-uninstall.sh"
        ignore_errors: yes
      - name: Initialize the agent
        shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars['kube']['ansible_host'] }}:6443 K3S_TOKEN={{ hostvars['kube']['node_key'] }} sh -"
      when: hostvars['kube']['node_status'][inventory_hostname] is not defined or hostvars['kube']['node_status'][inventory_hostname] != 'Ready'
    
# - name: Configure deployments
#   hosts: kubernetes_master
#   become: true
#   tasks: 